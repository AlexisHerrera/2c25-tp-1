services:
  api:
    build: ./app
    ports:
      - "3000:3000"
    env_file:
      - .env
    environment:
      - MONGODB_URI=mongodb://mongo:27017
      - DB_NAME=exchange-service
    volumes:
      - ./app:/opt/app
      - /opt/app/node_modules
    depends_on:
      - mongo
    #deploy:
    #  resources:
    #    limits:
    #      cpus: "0.25"

  nginx:
    image: nginx:1.27.4
    ports:
      - "5555:80"
    volumes:
      - ./nginx_reverse_proxy.conf:/etc/nginx/conf.d/default.conf:ro
      - ./store/static/files:/static:ro
    links:
      - api

  graphite:
    image: graphiteapp/graphite-statsd:1.1.10-5
    volumes:
      - ./statsd.config.json:/opt/statsd/config/udp.js
      - ./graphite.storage-schemas.conf:/opt/graphite/conf/storage-schemas.conf
    ports:
      - "8090:80"
      - "8125:8125/udp"
      - "8126:8126"

  grafana:
    image: grafana/grafana:11.5.2
    ports:
      - "3030:3000"
    volumes:
      - "grafana_config:/var/lib/grafana"

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.49.2
    links:
      - graphite
    command: -storage_driver="statsd" -storage_driver_host="graphite:8125" -storage_driver_db="cadvisor" -storage_driver_buffer_duration="1s" --docker_only=true
    ports:
      - "8080:8080"
    volumes:
      - "/:/rootfs:ro"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"

  # Local MongoDB service for development/testing (binds to host 27017)
  mongo:
    image: mongo:6.0
    restart: unless-stopped
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    depends_on:
      - cadvisor

volumes:
  grafana_config:
    driver: local
  mongo_data:
    driver: local
